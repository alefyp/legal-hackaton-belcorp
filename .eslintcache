[{"C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\App.js":"1","C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\components\\filters.js":"2","C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\views\\projectView.js":"3","C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\API\\data\\schema.js":"4","C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\components\\projectCards.js":"5","C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\components\\updateCard.js":"6"},{"size":2339,"mtime":1606421451826,"results":"7","hashOfConfig":"8"},{"size":4282,"mtime":1606434916513,"results":"9","hashOfConfig":"8"},{"size":2769,"mtime":1606435366607,"results":"10","hashOfConfig":"8"},{"size":17521,"mtime":1606406366640,"results":"11","hashOfConfig":"8"},{"size":525,"mtime":1606435106989,"results":"12","hashOfConfig":"8"},{"size":643,"mtime":1606435644056,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h6spxk",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\components\\filters.js",["27","28"],"/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport Grid from '../Assets/Icons/grid.svg';\r\nimport List from '../Assets/Icons/list.svg';\r\nimport Lupita from '../Assets/Icons/Lupa.svg';\r\n\r\nimport './filters.css';\r\n\r\nexport default function Filters({\r\n  setGrid, setList, search, setSearch, Api, setProject,\r\n}) {\r\n  const options = [\r\n    { label: 'Mostrar todos' },\r\n    {\r\n      label: 'Cronológico',\r\n      options: [{ label: 'Ascendente', value: 'Asc', typeFilter: 'Cronologico' },\r\n        { label: 'Descendente', value: 'Desc', typeFilter: 'Cronologico' }],\r\n    },\r\n    {\r\n      label: 'Nivel de riesgo',\r\n      options: [{ label: 'Riesgo Alto', value: 'Alto', typeFilter: 'Nivel' },\r\n        { label: 'Riesgo Medio', value: 'Medio', typeFilter: 'Nivel' },\r\n        { label: 'Riesgo Bajo', value: 'Bajo', typeFilter: 'Nivel' }],\r\n    },\r\n    {\r\n      label: 'Tipo de riesgo',\r\n      options: [{ label: 'Riesgo Laboral', value: 'Riesgo Laboral', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo Reputacional', value: 'Riesgo Reputacional', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo Financiero', value: 'Riesgo Financiero', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo Reputacional', value: 'Riesgo Reputacional', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo Tributario', value: 'Riesgo Tributario', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo de Propiedad Intelectual', value: 'Riesgo de Propiedad Intelectual', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo Ambiental', value: 'Riesgo Ambiental', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo Publicitario', value: 'Riesgo Publicitario', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo de Consumidor', value: 'Riesgo de Consumidor', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo Seguridad de la Información', value: 'Riesgo Seguridad de la Información', typeFilter: 'Tipo' },\r\n        { label: 'Riesgo de Libre Competencia', value: 'Riesgo de Libre Competencia', typeFilter: 'Tipo' }],\r\n    },\r\n  ];\r\n  const searchFunc = (match) => {\r\n    if (match === '') {\r\n      setProject(Api);\r\n    } else {\r\n      const filtroBusqueda = Api.filter((prj) => prj.name.includes(match));\r\n      setProject(filtroBusqueda);\r\n    }\r\n  };\r\n  const typing = (e) => {\r\n    e.persist();\r\n    setSearch(e.target.value);\r\n    searchFunc(e.target.value);\r\n  };\r\n\r\n  const filterFunc = (event, type) => {\r\n    let arrRisk;\r\n    let otherArr;\r\n    if (type === 'Tipo') {\r\n      // eslint-disable-next-line max-len\r\n      arrRisk = Api.map((proj) => proj.risks.filter((typeRisk) => typeRisk.type.includes(event)));\r\n      arrRisk.map((proj) => {\r\n        if (proj === []) {\r\n          return otherArr;\r\n        }\r\n        return otherArr.push(proj);\r\n      });\r\n      console.log(otherArr);\r\n    /*   arrRisk.forEach((risk) => {\r\n        if (risk !== []) {\r\n          otherArr.push(risk);\r\n        }\r\n      }); */\r\n    }\r\n    if (type === 'Nivel') {\r\n      // eslint-disable-next-line max-len\r\n      arrRisk = Api.map((proj) => proj.risks.filter((typeRisk) => typeRisk.level.includes(event)));\r\n      console.log(arrRisk);\r\n    }\r\n    if (type === 'Cronologico') {\r\n      // eslint-disable-next-line max-len\r\n      arrRisk = Api.sort((lastDate, firstDate) => {\r\n        if (lastDate.startingDate > firstDate.startingDate) { return 1; } return -1;\r\n      });\r\n      if (event === 'Desc') {\r\n        arrRisk.reverse();\r\n      }\r\n    }\r\n    return otherArr;\r\n  };\r\n  return (\r\n    <div className=\"container-filters\">\r\n      <div className=\"search-input\">\r\n        <img src={Lupita} alt=\"Buscar\" />\r\n        <input placeholder=\"Buscar por nombre\" className=\"search-input\" value={search} onChange={typing} />\r\n      </div>\r\n      <Select\r\n        className=\"select-filter\"\r\n        placeholder=\"Filtrar por:\"\r\n        options={options}\r\n        autoFocus\r\n        isSearchable\r\n        onChange={(e) => filterFunc(e.value, e.typeFilter)}\r\n      />\r\n      <button type=\"button\" className=\"btn-list\" value=\"list\" onClick={() => { setGrid(false); setList(true); }}><img src={List} alt=\"List\" /></button>\r\n      <button type=\"button\" className=\"btn-grid\" value=\"grid\" onClick={() => { setGrid(true); setList(false); }}><img src={Grid} alt=\"Grid\" /></button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\views\\projectView.js",[],"C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\API\\data\\schema.js",[],"C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\components\\projectCards.js",[],"C:\\Users\\ASUS\\Desktop\\nuevo\\legal-hackaton-belcorp\\src\\components\\updateCard.js",[],{"ruleId":"29","severity":1,"message":"30","line":67,"column":7,"nodeType":"31","messageId":"32","endLine":67,"endColumn":18},{"ruleId":"29","severity":1,"message":"30","line":77,"column":7,"nodeType":"31","messageId":"32","endLine":77,"endColumn":18},"no-console","Unexpected console statement.","MemberExpression","unexpected"]